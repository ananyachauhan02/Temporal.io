apiVersion: v1
kind: Namespace
metadata:
  name: temporal
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: elasticsearch-pvc
  namespace: temporal
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgresql-pvc
  namespace: temporal
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: elasticsearch
  namespace: temporal
spec:
  replicas: 1
  selector:
    matchLabels:
      app: elasticsearch
  template:
    metadata:
      labels:
        app: elasticsearch
    spec:
      containers:
        - name: elasticsearch
          image: elasticsearch:7.10.1
          env:
            - name: cluster.routing.allocation.disk.threshold_enabled
              value: "true"
            - name: cluster.routing.allocation.disk.watermark.low
              value: "512mb"
            - name: cluster.routing.allocation.disk.watermark.high
              value: "256mb"
            - name: cluster.routing.allocation.disk.watermark.flood_stage
              value: "128mb"
            - name: discovery.type
              value: "single-node"
            - name: ES_JAVA_OPTS
              value: "-Xms256m -Xmx256m"
            - name: xpack.security.enabled
              value: "false"
          volumeMounts:
            - name: elasticsearch-storage
              mountPath: /usr/share/elasticsearch/data
      volumes:
        - name: elasticsearch-storage
          persistentVolumeClaim:
            claimName: elasticsearch-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch
  namespace: temporal
spec:
  ports:
    - port: 9200
      targetPort: 9200
  selector:
    app: elasticsearch
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresql
  namespace: temporal
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      containers:
        - name: postgresql
          image: postgres:12
          env:
            - name: POSTGRES_USER
              value: "temporal"
            - name: POSTGRES_PASSWORD
              value: "temporal"
          volumeMounts:
            - name: postgresql-storage
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgresql-storage
          persistentVolumeClaim:
            claimName: postgresql-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: postgresql
  namespace: temporal
spec:
  ports:
    - port: 5432
      targetPort: 5432
  selector:
    app: postgresql
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: temporal
  namespace: temporal
spec:
  replicas: 1
  selector:
    matchLabels:
      app: temporal
  template:
    metadata:
      labels:
        app: temporal
    spec:
      containers:
        - name: temporal
          image: temporalio/auto-setup:latest
          env:
            - name: DB
              value: "postgres12"
            - name: DB_PORT
              value: "5432"
            - name: POSTGRES_USER
              value: "temporal"
            - name: POSTGRES_PWD
              value: "temporal"
            - name: POSTGRES_SEEDS
              value: "postgresql"
            - name: ENABLE_ES
              value: "true"
            - name: ES_SEEDS
              value: "elasticsearch"
            - name: ES_VERSION
              value: "v7"
            - name: PROMETHEUS_ENDPOINT
              value: "0.0.0.0:8000"
          ports:
            - containerPort: 7233
            - containerPort: 8000
---
apiVersion: v1
kind: Service
metadata:
  name: temporal
  namespace: temporal
spec:
  ports:
    - name: grpc
      port: 7233
      targetPort: 7233
    - name: metrics
      port: 8000
      targetPort: 8000
  selector:
    app: temporal
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: temporal-ui
  namespace: temporal
spec:
  replicas: 1
  selector:
    matchLabels:
      app: temporal-ui
  template:
    metadata:
      labels:
        app: temporal-ui
    spec:
      containers:
        - name: temporal-ui
          image: temporalio/ui:latest
          env:
            - name: TEMPORAL_ADDRESS
              value: "temporal:7233"
            - name: TEMPORAL_CORS_ORIGINS
              value: "*"
          ports:
            - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: temporal-ui
  namespace: temporal
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: temporal-ui
